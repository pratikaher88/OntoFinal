version: '3'

services:

  db:
    # build: ./db
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=paher
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hospital1
    ports:
      - "5432:5432"
    restart: on-failure

  db2:
    # build: ./db
    container_name: postgres2
    image: postgres:latest
    environment:
      - POSTGRES_USER=paher
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hospital2
    ports:
      - "5434:5432"
    restart: on-failure

  mongodb:
    image: mongo
    restart: always
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
      - ./data-db:/data/db
    environment:
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: mongoadmin
      MONGODB_DATABASE: django_mongodb_docker
    ports:
      - 27017:27017

  # web:
  #   build : .
  #   restart: always
  #   command: python manage.py runserver 0.0.0.0:8000
  #   ports:
  #     - 8000:8000
  #   links:
  #     - mongodb


  # migration:
  #   build: .
  #   command: python manage.py migrate --database=hospital2 && python manage.py migrate --database=hospital1 && python manage.py migrate --database=mongo
  #   volumes:
  #     - .:/django_mongodb_docker
  #   links:
  #     - mongodb
  #   depends_on:
  #     - web

  # django_app:
  #   build: ./
  #   container_name: django_app
  #   # volumes:
  #   #   - ./:/ontodesign
  # #   # command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
  #   command: sh -c "python manage.py migrate --database=hospital1 && python manage.py migrate --database=hospital2 && python manage.py runserver 0.0.0.0:8000"
  #   ports:
  #       - "8000:8000"
  #   # restart: on-failure
  #   depends_on:
  #     - db
  #     - db2
  #   links:
  #     - db
  #     - db2



